import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";

import { SafeOnRampKit, SafeOnRampProviderType } from "@safe-global/onramp-kit";

import { useEffect, useState } from "react";

import transakSDK from "@transak/transak-sdk";

// let transak = new transakSDK({
//   apiKey: '<your-api-key>', // (Required)
//   environment: '<environment: STAGING/PRODUCTION>', // (Required)
//   // .....
//   // For the full list of customisation options check the link above
// });
// https://docs.transak.com/docs/web-sdk-integration

// Ramp network can also be used
// https://ramp.network/

// https://stripe.com/docs/crypto/integrate-the-onramp

// https://docs.safe.global/learn/safe-core/safe-core-account-abstraction-sdk/onramp-kit

export default function onramp() {
  const [safeOnRamp, setSafeOnRamp] = useState();
  const [address, setAddress] = useState();

  const fundWallet = async () => {
    console.log("Funding the wallet ...");
    if (!address) return;

    const safeOnRamp = await SafeOnRampKit.init(SafeOnRampProviderType.Stripe, {
      onRampProviderConfig: {
        // Get public key from Stripe: https://dashboard.stripe.com/register
        stripePublicKey:
          "pk_test_51MZbmZKSn9ArdBimSyl5i8DqfcnlhyhJHD8bF2wKrGkpvNWyPvBAYtE211oHda0X3Ea1n4e9J9nh2JkpC7Sxm5a200Ug9ijfoO",
        // Deploy your own server: https://github.com/5afe/aa-stripe-service
        onRampBackendUrl: "https://aa-stripe.safe.global",
      },
    });

    const sessionData = await safeOnRamp.open({
      walletAddress: address,
      networks: ["polygon", "ethereum"],
      element: "#stripe-root",
      //   Optional, if you want to use a specific created session
      //   sessionId: "cos_1Mei3cKSn9ArdBimJhkCt1XC",
      events: {
        onLoaded: () => console.log("Loaded"),
        onPaymentSuccessful: () => console.log("Payment successful"),
        onPaymentError: () => console.log("Payment failed"),
        onPaymentProcessing: () => console.log("Payment processing"),
      },
    });

    console.log({ sessionData });
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p>Safe Onramp Kit demo</p>
        </div>

        <div className={styles.center}>
          <input
            type="text"
            placeholder="Enter the address"
            value={address}
            onChange={(e) => {
              setAddress(e.target.value);
            }}
          />
          <button onClick={fundWallet}>Login</button>
        </div>
      </main>
    </>
  );
}
